{% extends 'base.html.twig' %}
{% block title %} Accueil {% endblock %}
{% block body %}
    <section class="section">
        <div class="content">
            <div class="columns is-centered">
                <div class="has-text-centered">
                    <h3>Bienvenue sur le site EQUITREC</h3>

                    {% set user = app.session.get('user') %}
                    <span>Connecté en tant que <b>{{ user['login'] }}</b></span>
                </div>
            </div>
        </div>

    </section>

    <figure class="highcharts-figure">
        <div id="chart_div"></div>
        <div id="container"></div>


    </figure>
{% block stylesheets %}
    <style>

    .highcharts-figure,
    .highcharts-data-table table {
    min-width: 320px;
    max-width: 800px;
    margin: 1em auto;
    }

    .highcharts-data-table table {
    font-family: Verdana, sans-serif;
    border-collapse: collapse;
    border: 1px solid #ebebeb;
    margin: 10px auto;
    text-align: center;
    width: 100%;
    max-width: 500px;
    }

    .highcharts-data-table caption {
    padding: 1em 0;
    font-size: 15px;
    color: #555;
    }

    .highcharts-data-table th {
    font-weight: 600;
    padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
    padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
    background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
    background: #f1f7ff;
    }

    </style>

    {% endblock %}

    {% block javascripts %}
        <script src="https://code.highcharts.com/highcharts.js"></script>
        <script src="https://code.highcharts.com/modules/exporting.js"></script>
        <script src="https://code.highcharts.com/modules/export-data.js"></script>
        <script>
            function drawChart() {
                fetch('http://localhost/EQUITREC/public/chart-data')
                    .then((response) => response.json())
                    .then((data) => {
                        // Préparez les données pour Highcharts
                        const chartData = data.map((row) => ({
                            name: row.nom_competition,
                            y: parseFloat(row.average_notes),
                        }));

                        // Créez le graphique avec Highcharts
                        Highcharts.chart('chart_div', {
                            chart: {
                                type: 'column',
                            },
                            title: {
                                text: 'Moyenne des notes par compétition',
                            },
                            xAxis: {
                                type: 'category',
                                title: {
                                    text: '',
                                },
                            },
                            yAxis: {
                                title: {
                                    text: 'Moyenne des notes',
                                },
                            },
                            tooltip:
                                {
                                    pointFormat: '{series.name}: <b>{point.y:.2f}</b>'
                                },
                            series: [
                                {
                                    name: 'Moyenne',
                                    data: chartData,
                                    color: 'black',
                                    borderRadius: 15,
                                    pointWidth: 65
                                },
                            ],
                        });
                    });
            }

            function nbConnectes() {
                var data = [];
                var maxDataPoints = 10; // Nombre maximum de points de données à afficher

                document.addEventListener('DOMContentLoaded', function () {
                    const chart = Highcharts.chart('container', {
                        chart: {
                            type: 'bar'
                        },
                        title: {
                            text: 'Exemple de graphique en barres' // Titre du graphique
                        },
                        xAxis: {
                            categories: ['A', 'B', 'C', 'D', 'E'], // Catégories de l'axe des x
                            title: {
                                text: 'Catégories' // Titre de l'axe des x
                            }
                        },
                        yAxis: {
                            title: {
                                text: 'Valeurs' // Titre de l'axe des y
                            }
                        },
                        series: [{
                            name: 'Série 1', // Nom de la série de données
                            data: [5, 10, 15, 20, 25], // Données du graphique
                            color: 'lightgrey',
                            borderRadius: 10
                        }]

                    });

                    fetch('http://localhost/EQUITREC/public/api/connexionJournee')
                        .then(response => response.json())
                        .then(data => {
                            const seriesData = data.map(item => {
                                const date = new Date(item.date_connexion).getTime();
                                return [date, parseInt(item.id_juge)];
                            });

                            // Triez les données par date si nécessaire
                            seriesData.sort((a, b) => a[0] - b[0]);

                            chart.series[0].setData(seriesData);
                        });

// Fonction pour ajouter des données au graphique
                    function addDataPoint(x, y) {
                        let maxDataPoints;
                        var shift = data.length > maxDataPoints; // Vérifie si le nombre de points de données dépasse la limite
                        chart.series[0].addPoint([x, y], true, shift); // Ajoute un nouveau point de données
                    }

// Exemple de mise à jour des données toutes les 2 secondes (à remplacer avec vos données en temps réel)
//                     setInterval(function() {
                    //     var x = new Date().getTime(); // Obtient l'heure actuelle en millisecondes
                    //     var y = Math.floor(Math.random() * 10) + 1; // Génère un nombre aléatoire entre 1 et 10 pour les personnes connectées
                    //     addDataPoint(x, y); // Ajoute le point de données au graphique
                    // }, 2000); // Met à jour toutes les 2 secondes

                });
            }
            drawChart();
            nbConnectes();



        </script>
        {% endblock %}
{% endblock %}
